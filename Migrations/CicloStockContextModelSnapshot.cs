// <auto-generated />
using System;
using CicloStock.Mapping;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CicloStock.Migrations
{
    [DbContext(typeof(CicloStockContext))]
    partial class CicloStockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CicloStock.Models.EntradaLoteModel", b =>
                {
                    b.Property<int>("EntradaLoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradaLoteId"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<short?>("Inconsistencia")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntradaLoteId");

                    b.HasIndex("EntradaId");

                    b.ToTable("EntradaLote", (string)null);
                });

            modelBuilder.Entity("CicloStock.Models.EntradaModel", b =>
                {
                    b.Property<int>("EntradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradaId"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("Situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntradaId");

                    b.ToTable("Entrada", (string)null);
                });

            modelBuilder.Entity("CicloStock.Models.LocacaoModel", b =>
                {
                    b.Property<int>("LocacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocacaoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<short>("Situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocacaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Locacao", (string)null);
                });

            modelBuilder.Entity("CicloStock.Models.ProdutoModel", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("Situacao")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("CicloStock.Models.EntradaLoteModel", b =>
                {
                    b.HasOne("CicloStock.Models.EntradaModel", "Entrada")
                        .WithMany("EntradaLotes")
                        .HasForeignKey("EntradaId");

                    b.Navigation("Entrada");
                });

            modelBuilder.Entity("CicloStock.Models.LocacaoModel", b =>
                {
                    b.HasOne("CicloStock.Models.ProdutoModel", "Produto")
                        .WithMany("Locacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CicloStock.Models.EntradaModel", b =>
                {
                    b.Navigation("EntradaLotes");
                });

            modelBuilder.Entity("CicloStock.Models.ProdutoModel", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
